{"version":3,"sources":["apis/heroku.js","actions/index.js","components/Map/index.js","components/Login/index.js","components/Tasks/UserBar.js","components/Tasks/TaskList.js","components/Tasks/Task.js","components/Tasks/index.js","components/Routes.js","components/App.js","reducers/index.js","reducers/userReducer.js","reducers/sectionReducer.js","reducers/answersReducer.js","reducers/knowledgeReducer.js","reducers/taskReducer.js","index.js"],"names":["axios","create","baseURL","fetchUser","id","dispatch","a","heroku","get","response","console","log","type","payload","data","Map","props","window","innerWidth","innerHeight","state","redirectToLogin","width1","height1","width2","height2","width3","height3","width4","height4","width5","height5","this","user","_id","setState","username","className","push","to","style","left","top","React","Component","connect","section","Login","handleChange","event","target","name","value","password","handleSubmit","preventDefault","login","onSubmit","placeholder","onChange","required","form","post","localStorage","setItem","UserBar","isModalOpen","clickLogout","logout","handleToggleModal","getItem","fetchKnowledgeBaseList","knowledgeList","data-percent","coins","src","alt","experience","onClick","Modal","open","background","Header","Content","map","el","key","knowledgeId","title","TaskList","clickTask","fetchTask","renderTasks","tasks","length","task","number","taskId","userId","headers","Task","renderQuestions","questions","question","answers","answer","content","description","prize","exp","Tasks","fetchSection","match","params","color","Routes","path","exact","component","App","combineReducers","email","currentTask","action","initialState","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a988ae1f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://thawing-tundra-50143.herokuapp.com/'\r\n});\r\n","import heroku from '../apis/heroku';\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    if (!username || !password) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.post('login/', { username, password });\r\n    } catch (error) {\r\n        return console.log('login error: ', error);\r\n    }\r\n    if (!response.data._id) return;\r\n    localStorage.setItem('userId', response.data._id);\r\n    dispatch({ type: 'LOGIN', payload: response.data });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.setItem('userId', '');\r\n    dispatch({ type: 'LOGOUT' });\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n    if (!id) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.get('user/' + id);\r\n    } catch (error) {\r\n        return console.log('fetchUser error: ', error);\r\n    }\r\n    dispatch({ type: 'FETCH_USER', payload: response.data });\r\n};\r\n\r\nexport const fetchSection = id => async dispatch => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!id || !userId) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.get('section/' + id, { headers: { userId } });\r\n    } catch (error) {\r\n        return console.log('fetchSection error: ', error);\r\n    }\r\n    dispatch({\r\n        type: 'FETCH_SECTION',\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const fetchTask = id => async dispatch => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!id || !userId) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.get('task/' + id, { headers: { userId } });\r\n    } catch (error) {\r\n        return console.log('fetchTask error: ', error);\r\n    }\r\n    console.log(response.data);\r\n    dispatch({\r\n        type: 'FETCH_TASK',\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const postAnswer = (taskId, answer) => async dispatch => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!taskId || !answer || !userId) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.post('answer/', { body: { userId, taskId, answer } });\r\n    } catch (error) {\r\n        return console.log('postAnswer error: ', error);\r\n    }\r\n    if (!response.data.correctAnswerNumber) return;\r\n    dispatch({\r\n        type: 'POST_ANSWER',\r\n        payload: { answer, taskId, correctAnswerNumber: response.data.correctAnswerNumber }\r\n    });\r\n};\r\n\r\nexport const fetchKnowledgeBaseList = () => async dispatch => {\r\n    try {\r\n        const response = await heroku.get('/knowledge')\r\n        console.log(response)\r\n        dispatch({ \r\n            type: 'FETCH_KNOWLEDGE_BASE_LIST',\r\n            payload: response.data,\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../../actions';\r\nimport './map.css';\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const width = window.innerWidth - 100;\r\n        const height = window.innerHeight -100;\r\n\r\n        const width1 = 10\r\n        const height1 = 60\r\n        const width2 =  30\r\n        const height2 =  30\r\n        const width3 = 60\r\n        const height3 =  10\r\n        const width4 =  65\r\n        const height4 =  60\r\n        const width5 =  80\r\n        const height5 =  55\r\n\r\n        this.state = { \r\n            redirectToLogin: false,\r\n            width1, \r\n            height1,\r\n            width2, \r\n            height2,\r\n            width3, \r\n            height3,\r\n            width4, \r\n            height4,\r\n            width5, \r\n            height5,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Redirect to login if user is not logged\r\n        if (!this.props.user._id) this.setState({ redirectToLogin: true });\r\n        // Fetch user data if userId exists\r\n        if (!this.props.user.username) this.props.fetchUser(this.props.user._id);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            width1, \r\n            height1,\r\n            width2, \r\n            height2,\r\n            width3, \r\n            height3,\r\n            width4, \r\n            height4,\r\n            width5, \r\n            height5,\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"map\">\r\n                {this.state.redirectToLogin ? <Redirect push to=\"/login\" /> : ''}\r\n                <Link to=\"/tasks/1\" className=\"button-element\" style={{left: width1+'%', top: height1+'%'}}>\r\n                    {/* <i className=\"book icon\" /> */}\r\n                    <span>Księga 1</span>\r\n                </Link>\r\n                <Link to=\"/tasks/2\" className=\"button-element\" style={{left: width2+'%', top: height2+'%'}}>\r\n                    <span>Księga 2</span>\r\n                </Link>\r\n                <Link to=\"/tasks/3\" className=\"button-element\" style={{left: width3+'%', top: height3+'%'}}>\r\n                    <span>Księga 3</span>\r\n                </Link>\r\n                <Link to=\"/tasks/4\" className=\"button-element\" style={{left: width4+'%', top: height4+'%'}}>\r\n                    <span>Księga 4</span>\r\n                </Link>\r\n                <Link to=\"/tasks/5\" className=\"button-element\" style={{left: width5+'%', top: height5+'%'}}>\r\n                    <span>Księga 5</span>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchUser }\r\n)(Map);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../actions';\r\nimport './login.css';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { username: '', password: '' };\r\n    }\r\n\r\n    handleChange = event => {\r\n        switch (event.target.name) {\r\n            case 'username':\r\n                this.setState({ username: event.target.value });\r\n                break;\r\n\r\n            case 'password':\r\n                this.setState({ password: event.target.value });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n        this.props.login(username, password);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui middle aligned center aligned grid\">\r\n                {!!this.props.user._id ? <Redirect push to=\"/\" /> : ''}\r\n                <div className=\"column\">\r\n                    {/* <h2 className=\"ui teal image header\">\r\n                        <div className=\"content\">Zaloguj się na konto</div>\r\n                    </h2> */}\r\n                    <form className=\"ui large form\" id=\"formLogin\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"ui stacked segment\">\r\n                            <div className=\"field\">\r\n                                <div className=\"ui left icon input\">\r\n                                    <i className=\"user icon\"></i>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        placeholder=\"Login\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                    ></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <div className=\"ui left icon input\">\r\n                                    <i className=\"lock icon\"></i>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        placeholder=\"Hasło\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                    ></input>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"ui fluid large submit button\" form=\"formLogin\">\r\n                                Zaloguj\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"ui error message\"></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser, logout, fetchKnowledgeBaseList } from '../../actions';\r\nimport { Modal } from 'semantic-ui-react';\r\n\r\nimport './UserBar.css';\r\n\r\nclass UserBar extends React.Component {\r\n    state = {\r\n        isModalOpen: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!this.props.user.name) this.props.fetchUser(localStorage.getItem('userId'));\r\n\r\n        this.props.fetchKnowledgeBaseList();\r\n    }\r\n\r\n    clickLogout = event => {\r\n        this.props.logout();\r\n    };\r\n\r\n    handleToggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    };\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        console.log(this.props.knowledgeList);\r\n\r\n        return (\r\n            <>\r\n                <div className=\"user-bar-container\">\r\n                    <div>{user.name}</div>\r\n                    <div>\r\n                        <div className=\"ui indicating progress active\" data-percent=\"50\">\r\n                            <div className=\"bar\"></div>\r\n                            <div className=\"label\">Postęp</div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {user.coins}\r\n                        <img src=\"dollar.png\" alt=\"dollar\" />\r\n                    </div>\r\n                    <div>\r\n                        {user.experience} <img src=\"goal.png\" alt=\"goal\" />\r\n                    </div>\r\n                    <div className=\"right-buttons\">\r\n                        <div className=\"spellbook\" onClick={this.handleToggleModal}>\r\n                            <img src=\"open-book.png\" alt=\"open book\" />\r\n                            <div>Księga zaklęć</div>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"ui button\" onClick={this.clickLogout}>\r\n                                <img src=\"logout.png\" alt=\"logout\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal open={this.state.isModalOpen} style={{ background: 'black' }}>\r\n                    <Modal.Header>\r\n                        <div onClick={this.handleToggleModal} className=\"modal-header\">\r\n                            <span>X</span>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                        <div className=\"content-inner\">\r\n                            <div className=\"left-list\">\r\n                                {this.props.knowledgeList.map(el => {\r\n                                    return (\r\n                                        <div className=\"left-list-element\" key={el.knowledgeId}>\r\n                                            {el.title}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"right-content\">asdasdasdasdasd</div>\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section, knowledgeList: state.knowledgeList };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchUser, logout, fetchKnowledgeBaseList }\r\n)(UserBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './tasks.css';\r\nimport { fetchTask } from '../../actions';\r\n\r\nclass TaskList extends React.Component {\r\n    clickTask = event => {\r\n        this.props.fetchTask(event.target.id);\r\n    };\r\n\r\n    render() {\r\n        return <div> {this.renderTasks()}</div>;\r\n    }\r\n    renderTasks() {\r\n        console.log(this.props.section.tasks);\r\n        if (this.props.section.tasks.length === 0) return <div></div>;\r\n        const tasks = this.props.section.tasks.map(task => {\r\n            console.log(task);\r\n            return (\r\n                <button key={task.number} id={task.taskId} onClick={this.clickTask} className=\"step\">\r\n                    <i className=\"shopping cart icon\"></i>\r\n                    <div className=\"content\">\r\n                        <div className=\"title\">{task.number + '. ' + (task.name || task.title)}</div>\r\n                        <div className=\"description\">Skompletuj ekwipunek</div>\r\n                    </div>\r\n                </button>\r\n            );\r\n        });\r\n        return <div className=\"ui vertical steps\">{tasks}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchTask }\r\n)(TaskList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './tasks.css';\r\n\r\nclass Task extends React.Component {\r\n    render() {\r\n        console.log('taskdes:', this.props.task);\r\n        const { task } = this.props;\r\n        return (\r\n            <div className=\"task\">\r\n                <div>{task.description}</div>\r\n                <div>\r\n                    Prize: <br />\r\n                    Experience: {task.prize.exp} <br /> Coins: {task.prize.coins}\r\n                </div>\r\n                <div>\r\n                    Test: <br />\r\n                    {this.renderQuestions()}\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderQuestions = () => {\r\n        console.log('QUUIISSZZZ: ', this.props.task.questions);\r\n        if (!this.props.task.questions || this.props.task.questions.length === 0) return <div></div>;\r\n        const questions = this.props.task.questions.map(question => {\r\n            const key = question.question;\r\n            const answers = question.answers.map(answer => {\r\n                return (\r\n                    <label key={answer.number}>\r\n                        <input type=\"radio\" name=\"key\" />\r\n                        {answer.content}\r\n                    </label>\r\n                );\r\n            });\r\n            return (\r\n                <div key={key}>\r\n                    {question.question}\r\n                    <br />\r\n                    {answers}\r\n                </div>\r\n            );\r\n        });\r\n        return <div> {questions} </div>;\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section, task: state.task };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Task);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport UserBar from './UserBar';\r\nimport TaskList from './TaskList';\r\nimport Task from './Task';\r\nimport { fetchSection } from '../../actions';\r\nimport './tasks.css';\r\n\r\nclass Tasks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { redirectToLogin: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Redirect to login if user is not logged\r\n        if (!this.props.user._id) this.setState({ redirectToLogin: true });\r\n        this.props.fetchSection(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: 'white' }}>\r\n                {!this.props.user._id ? <Redirect push to=\"/login\" /> : ''}\r\n                <UserBar />\r\n                <div className='flex'>\r\n                    <TaskList />\r\n                    <Task />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchSection }\r\n)(Tasks);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Map from './Map';\r\nimport Login from './Login';\r\nimport Tasks from './Tasks';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Map} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/tasks/:id\" exact component={Tasks} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Routes />\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport sectionReducer from './sectionReducer';\r\nimport answersReducer from './answersReducer';\r\nimport knowledgeReducer from './knowledgeReducer';\r\nimport taskReducer from './taskReducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    section: sectionReducer,\r\n    answers: answersReducer,\r\n    knowledgeList: knowledgeReducer,\r\n    task: taskReducer\r\n});\r\n","export default (\r\n    state = { _id: '', username: '', name: '', email: '', currentTask: null, coins: 0, experience: 0 },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return action.payload;\r\n        case 'LOGOUT':\r\n            return { _id: '', username: '', name: '', email: '', currentTask: null, coins: 0, experience: 0 };\r\n        case 'FETCH_USER':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = { tasks: [], currentTask: '' }, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_SECTION':\r\n            return action.payload;\r\n        case 'LOGOUT':\r\n            return { tasks: [], currentTask: '' };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'POST_ANSWER':\r\n            return [...state, action.payload];\r\n        case 'LOGOUT':\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_KNOWLEDGE_BASE_LIST':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (\r\n    state = {\r\n        description: '',\r\n        prize: {\r\n            exp: 0,\r\n            coins: 0\r\n        },\r\n        questions: [],\r\n        answers: {\r\n            number: 0,\r\n            content: []\r\n        }\r\n    },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TASK':\r\n            console.log('taskinred: ', action.payload);\r\n            return action.payload;\r\n        case 'LOGOUT':\r\n            return {\r\n                description: '',\r\n                prize: {\r\n                    exp: 0,\r\n                    coins: 0\r\n                },\r\n                questions: [],\r\n                answers: {\r\n                    number: 0,\r\n                    content: []\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst initialState = {\r\n    user: { _id: localStorage.getItem('userId') || '' }\r\n};\r\n\r\nconst store = createStore(reducers, initialState, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}