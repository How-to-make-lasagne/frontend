{"version":3,"sources":["apis/heroku.js","actions/index.js","components/Map/index.js","components/Login/index.js","components/Tasks/UserBar.js","components/Tasks/TaskList.js","components/Tasks/Task.js","components/Tasks/index.js","components/Routes.js","components/App.js","reducers/index.js","reducers/userReducer.js","reducers/sectionReducer.js","reducers/answersReducer.js","index.js"],"names":["axios","create","baseURL","fetchUser","id","dispatch","a","heroku","get","response","console","log","type","payload","data","Map","props","state","redirectToLogin","this","user","_id","setState","username","className","push","to","React","Component","connect","section","Login","handleChange","event","target","name","value","password","handleSubmit","preventDefault","login","onSubmit","placeholder","onChange","required","form","post","localStorage","setItem","UserBar","getItem","data-percent","coins","src","alt","TaskList","clickTask","fetchTask","renderTasks","tasks","length","map","task","key","number","onClick","userId","headers","Tasks","fetchSection","match","params","style","color","Task","Routes","path","exact","component","App","combineReducers","email","currentTask","experience","action","answers","initialState","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fb853226.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://thawing-tundra-50143.herokuapp.com/'\r\n});\r\n","import heroku from '../apis/heroku';\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    if (!username || !password) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.post('login/', { username, password });\r\n    } catch (error) {\r\n        return console.log('login error: ', error);\r\n    }\r\n    if (!response.data._id) return;\r\n    localStorage.setItem('userId', response.data._id);\r\n    dispatch({ type: 'LOGIN', payload: response.data });\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n    if (!id) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.get('user/' + id);\r\n    } catch (error) {\r\n        return console.log('fetchUser error: ', error);\r\n    }\r\n    dispatch({ type: 'FETCH_USER', payload: response.data });\r\n};\r\n\r\nexport const fetchSection = id => async dispatch => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!id || !userId) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.get('section/' + id, { headers: { userId } });\r\n    } catch (error) {\r\n        return console.log('fetchSection error: ', error);\r\n    }\r\n    dispatch({\r\n        type: 'FETCH_SECTION',\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const fetchTask = id => async dispatch => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!id || !userId) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.get('task/' + id, { headers: { userId } });\r\n    } catch (error) {\r\n        return console.log('fetchTask error: ', error);\r\n    }\r\n    dispatch({\r\n        type: 'FETCH_TASK',\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const postAnswer = (taskId, answer) => async dispatch => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!taskId || !answer || !userId) return;\r\n    let response;\r\n    try {\r\n        response = await heroku.post('answer/', { body: { userId, taskId, answer } });\r\n    } catch (error) {\r\n        return console.log('postAnswer error: ', error);\r\n    }\r\n    if (!response.data.correctAnswerNumber) return;\r\n    dispatch({\r\n        type: 'POST_ANSWER',\r\n        payload: { answer, taskId, correctAnswerNumber: response.data.correctAnswerNumber }\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../../actions';\r\nimport './map.css';\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { redirectToLogin: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Redirect to login if user is not logged\r\n        if (!this.props.user._id) this.setState({ redirectToLogin: true });\r\n        // Fetch user data if userId exists\r\n        if (!this.props.user.username) this.props.fetchUser(this.props.user._id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"map\">\r\n                {this.state.redirectToLogin ? <Redirect push to=\"/login\" /> : ''}\r\n                <Link to=\"/tasks/1\">\r\n                    <button className=\"ui red button\" id=\"stepOne\">\r\n                        Dzia≈Ç 1\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/tasks/2\">\r\n                    <button className=\"ui red button\" id=\"stepTwo\">\r\n                        Dzia≈Ç 2\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/tasks/3\">\r\n                    <button className=\"ui red button\" id=\"stepThree\">\r\n                        Dzia≈Ç 3\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchUser }\r\n)(Map);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../actions';\r\nimport './login.css';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { username: '', password: '' };\r\n    }\r\n\r\n    handleChange = event => {\r\n        switch (event.target.name) {\r\n            case 'username':\r\n                this.setState({ username: event.target.value });\r\n                break;\r\n\r\n            case 'password':\r\n                this.setState({ password: event.target.value });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n        this.props.login(username, password);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui middle aligned center aligned grid\">\r\n                {!!this.props.user._id ? <Redirect push to=\"/\" /> : ''}\r\n                <div className=\"column\">\r\n                    {/* <h2 className=\"ui teal image header\">\r\n                        <div className=\"content\">Zaloguj siƒô na konto</div>\r\n                    </h2> */}\r\n                    <form className=\"ui large form\" id=\"formLogin\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"ui stacked segment\">\r\n                            <div className=\"field\">\r\n                                <div className=\"ui left icon input\">\r\n                                    <i className=\"user icon\"></i>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        placeholder=\"Login\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                    ></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <div className=\"ui left icon input\">\r\n                                    <i className=\"lock icon\"></i>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        placeholder=\"Has≈Ço\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                    ></input>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"ui fluid large submit button\" form=\"formLogin\">\r\n                                Zaloguj\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"ui error message\"></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../../actions';\r\n\r\nimport './UserBar.css';\r\n\r\nclass UserBar extends React.Component {\r\n    componentDidMount() {\r\n        if (!this.props.user.name) this.props.fetchUser(localStorage.getItem('userId'));\r\n    }\r\n    render() {\r\n        const { user } = this.props;\r\n\r\n        return (\r\n            <div className=\"user-bar-container\">\r\n                <div>{user.name}</div>\r\n                <div>\r\n                    <div className=\"ui indicating progress active\" data-percent=\"50\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"label\">Postƒôp</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {user.coins} coins\r\n                    <img src=\"dollar.png\" alt=\"dollar\" />\r\n                </div>\r\n                <div>\r\n                    1000 <img src=\"goal.png\" alt=\"goal\" />\r\n                </div>\r\n                <div className=\"right-buttons\">\r\n                    <div className=\"spellbook\">\r\n                        <img src=\"open-book.png\" alt=\"open book\" />\r\n                        <div>Ksiƒôga zaklƒôƒá</div>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"ui button\">\r\n                            <img src=\"logout.png\" alt=\"logout\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchUser }\r\n)(UserBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTask } from '../../actions';\r\n\r\nclass TaskList extends React.Component {\r\n    clickTask = event => {\r\n        this.props.fetchTask(event.target.id);\r\n    };\r\n\r\n    render() {\r\n        return <div> {this.renderTasks()}</div>;\r\n    }\r\n    renderTasks() {\r\n        if (this.props.section.tasks.length === 0) return <div></div>;\r\n        const tasks = this.props.section.tasks.map(task => {\r\n            return (\r\n                <button key={task.number} id={task._id} onClick={this.clickTask}>\r\n                    {task.number + '. ' + task.name}\r\n                </button>\r\n            );\r\n        });\r\n        return <div>{tasks}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchTask }\r\n)(TaskList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Tasks extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Opis</div>\r\n                <div>Nagrody</div>\r\n                <div>Test</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Tasks);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport UserBar from './UserBar';\r\nimport TaskList from './TaskList';\r\nimport Task from './Task';\r\nimport { fetchSection } from '../../actions';\r\n\r\nclass Tasks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { redirectToLogin: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Redirect to login if user is not logged\r\n        if (!this.props.user._id) this.setState({ redirectToLogin: true });\r\n        this.props.fetchSection(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: 'white' }}>\r\n                {this.state.redirectToLogin ? <Redirect push to=\"/login\" /> : ''}\r\n                <UserBar />\r\n                <TaskList />\r\n                <Task />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user, section: state.section };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchSection }\r\n)(Tasks);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Map from './Map';\r\nimport Login from './Login';\r\nimport Tasks from './Tasks';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Map} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/tasks/:id\" exact component={Tasks} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Routes />\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport sectionReducer from './sectionReducer';\r\nimport answersReducer from './answersReducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    section: sectionReducer,\r\n    answers: answersReducer\r\n});\r\n","export default (\r\n    state = { _id: '', username: '', name: '', email: '', currentTask: null, coins: 0, experience: 0 },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return action.payload;\r\n        case 'FETCH_USER':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = { tasks: [], currentTask: '' }, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_SECTION':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'POST_ANSWER':\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst initialState = {\r\n    user: { _id: localStorage.getItem('userId') || '' }\r\n};\r\n\r\nconst store = createStore(reducers, initialState, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}